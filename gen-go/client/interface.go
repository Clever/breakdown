package client

import (
	"context"

	"github.com/Clever/breakdown/gen-go/models"
)

//go:generate mockgen -source=$GOFILE -destination=mock_client.go -package client --build_flags=--mod=mod -imports=models=github.com/Clever/breakdown/gen-go/models

// Client defines the methods available to clients of the breakdown service.
type Client interface {

	// HealthCheck makes a GET request to /_health
	// Checks if the service is healthy
	// 200: nil
	// 400: *models.BadRequest
	// 500: *models.InternalError
	// default: client side HTTP errors, for example: context.DeadlineExceeded.
	HealthCheck(ctx context.Context) error

	// GetCommit makes a GET request to /v1/commit
	// get repo commit information
	// 200: *models.CommitInformation
	// 400: *models.BadRequest
	// 404: *models.NotFound
	// 500: *models.InternalError
	// default: client side HTTP errors, for example: context.DeadlineExceeded.
	GetCommit(ctx context.Context, i *models.GetCommitInformation) (*models.CommitInformation, error)

	// PostCustom makes a PUT request to /v1/custom
	// upload or replace custom data for a given repo and commit SHA
	// 200: nil
	// 400: *models.BadRequest
	// 500: *models.InternalError
	// default: client side HTTP errors, for example: context.DeadlineExceeded.
	PostCustom(ctx context.Context, i *models.CustomData) error

	// PostDeploy makes a POST request to /v1/deploy
	// report a number of deploys
	// 200: nil
	// 400: *models.BadRequest
	// 500: *models.InternalError
	// default: client side HTTP errors, for example: context.DeadlineExceeded.
	PostDeploy(ctx context.Context, i *models.Deploys) error

	// PostUpload makes a POST request to /v1/upload
	// upload a package-type file, generated by breakdown-cli
	// 200: nil
	// 400: *models.BadRequest
	// 500: *models.InternalError
	// default: client side HTTP errors, for example: context.DeadlineExceeded.
	PostUpload(ctx context.Context, i *models.RepoCommit) error
}
