swagger: '2.0'
info:
  title: breakdown
  description: breaks down packages within repos
  # when changing the version here, make sure to run
  # `make generate` to generate clients and server
  version: 0.2.0
  x-npm-package: '@clever/breakdown'
schemes:
  - http
produces:
  - application/json
responses:
  BadRequest:
    description: "Bad Request"
    schema:
      $ref: "#/definitions/BadRequest"
  InternalError:
    description: "Internal Error"
    schema:
      $ref: "#/definitions/InternalError"
  NotFound:
    description: Entity Not Found
    schema:
      $ref: "#/definitions/NotFound"
paths:
  /_health:
    get:
      operationId: healthCheck
      description: Checks if the service is healthy
      responses:
        200:
          description: OK response

  /v1/upload:
    post:
      operationId: postUpload
      description: upload a package-type file, generated by breakdown-cli
      parameters:
        - name: repo_commit
          in: body
          schema:
            $ref: '#/definitions/RepoCommit'
      responses:
        200:
          description: Successfully uploaded
        400:
          description: Bad request.
          schema:
            $ref: "#/definitions/BadRequest"

  /v1/deploy:
    post:
      operationId: postDeploy
      description: report a number of deploys
      parameters:
        - name: deploys
          in: body
          schema:
            $ref: '#/definitions/Deploys'
      responses:
        200:
          description: Successfully uploaded
        400:
          description: Bad request.
          schema:
            $ref: "#/definitions/BadRequest"

  /v1/custom:
    put:
      operationId: postCustom
      description: "upload or replace custom data for a given repo and commit SHA"
      parameters:
        - name: custom_data
          in: body
          schema:
            $ref: '#/definitions/CustomData'
      responses:
        200:
          description: Successfully uploaded
        400:
          description: Bad request.
          schema:
            $ref: "#/definitions/BadRequest"

definitions:

  JSONObject: # generates map[string]interface{}
    type: object
    additionalProperties:
      type: object
      additionalProperties: true

  Deploys:
    description: array of deploys
    type: array
    items:
      $ref: '#/definitions/Deploy'

  Deploy:
    description: deploy information
    type: object
    required:
      - commit_sha
      - application
      - version
      - run_type
      - environment
    properties:
      commit_sha:
        description: First 8 chars of commit SHA
        type: string
      application:
        description: Name of application
        type: string
      version:
        description: Version number of app
        type: string
      run_type:
        description: run type of app eg. service, workflow
        type: string
      environment:
        description: environment where app was deployed
        type: string

  CustomData:
    description: custom data object
    type: object
    required:
      - repo_name
      - commit_sha
      - data
    properties:
      repo_name:
        description: Full repo name "github.com/Clever/<name>"
        type: string
      commit_sha:
        description: First 8 chars of commit SHA
        type: string
      data:
        $ref: '#/definitions/JSONObject'

  RepoCommit:
    description: A repo commit
    type: object
    required:
      - repo_name
      - commit_sha
    properties:
      repo_name:
        description: Full repo name "github.com/Clever/<name>"
        type: string
      commit_sha:
        description: First 8 chars of commit SHA
        type: string
      package_files:
        $ref: '#/definitions/RepoPackageFiles'


  RepoPackageFiles:
    description: array of package-files generated by breakdowncli
    type: array
    items:
      $ref: '#/definitions/RepoPackageFile'

  RepoPackages:
    type: object
    description: key is the name@version of module/package
    properties:
      name:
        description: Name of go module or npm package
        type: string
      version:
        description: Version of go module or npm package
        type: string
      is_local:
        description: module/package is links locally
        type: boolean
      dependencies:
        description: list of depdenecies "<name>@<version>"
        type: array
        items:
          type: string

  RepoPackageFile:
    description: format of packages
    type: object
    required:
      - path
      - type
    properties:
      path:
        description: path to package file eg "go.mod"
        type: string
      type:
        description: type of package-file, eg. gomod, npm
        type: string
        enum:
        - gomod
        - npm
      name:
        description: Name of go module or npm package
        type: string
      go_version:
        description: version of go, if any
        type: string
      packages:
        additionalProperties:
          $ref: '#/definitions/RepoPackages'
      error:
        type: string
        description: error when parsing package-file, if any

  ErrorCode:
    type: string
    enum:
      - InvalidID
      # place more error codes that clients can identify and act upon

  InternalError:
    type: object
    properties:
      message:
        type: string
      code:
        $ref: "#/definitions/ErrorCode"

  BadRequest:
    type: object
    properties:
      message:
        type: string
      code:
        $ref: "#/definitions/ErrorCode"

  NotFound:
    type: object
    properties:
      message:
        type: string
      code:
        $ref: "#/definitions/ErrorCode"
